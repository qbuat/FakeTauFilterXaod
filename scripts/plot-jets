#!/usr/bin/env python
import os
import subprocess
# import logging; logging.basicConfig()
from rootpy import log; 
from argparse import ArgumentParser
from rootpy.io import root_open
from rootpy.plotting import Canvas, Hist, Legend
from rootpy.plotting.style import set_style
from tabulate import tabulate
import ROOT
import re

log = log[os.path.basename(__file__)]

set_style('ATLAS', shape='rect')
ROOT.gROOT.SetBatch(True)
ROOT.gStyle.SetPaintTextFormat("1.2f")

SLICE_PATT = re.compile('^Py_jetjet_(?P<slice>JZ\d).root?$')
def get_slices(path):
    slices = []
    for f in os.listdir(path):
        if 'root' in f and 'JZ' in f:
            slices.append(f)
    return slices


COLORS = {
    'JZ0': 'black',
    'JZ1': 'black',
    'JZ2': 'black',
    'JZ3': 'red',
    'JZ4': 'blue',
    'JZ5': 'green',
    'JZ6': 'purple',
    'JZ7': 'yellow',
    'JZ8': 'brown',
    }

xsec_filt_nevts = {
    'JZ0': [7.8420e7, 0.97563, 2000000],
    'JZ1': [7.8420e7, 0.024819, 2000000],
    'JZ2': [2.4334e6, 0.010040, 2000000],
    'JZ3': [2.6454e6, 0.011798, 2000000],
    'JZ4': [2.5464e2, 0.013440, 2000000],
    'JZ5': [4.5536, 0.014577, 1999000],
    'JZ6': [2.5752e-01, 0.010018, 2000000],
    'JZ7': [1.6214e-02, 0.011120, 1999000],
    'JZ8': [6.2505e-04, 0.010331, 2000000],
    }


def get_max(hlist):
    return max([h.GetBinContent(h.GetMaximumBin()) for h in hlist])
def plot_distribution(hlist):
    c = Canvas()
    # c.SetLogy(True)
    h_temp = hlist[0]
    h_temp.yaxis.SetRangeUser(0.000001, get_max(hlist) * 1.01)
    h_temp.Draw('AXIS')
    for h in hlist:
        h.Draw('SAMEHIST')
    leg = Legend(hlist, textsize=18)
    leg.Draw()
    c.SaveAs('plots/jet_slices.png')

if __name__ == '__main__':
    log.info(' Start !')
    
    parser = ArgumentParser()
    parser.add_argument('path', type=str)
    parser.add_argument('--hist', type=str, default='reco_pt_val_presel')
    args = parser.parse_args()
    slices = get_slices(args.path)
    log.info(slices)
    hlist = []
    for s in slices:
        match = re.match(SLICE_PATT, s)
        if match:
            log.info(match.group('slice'))
            rfile = root_open(os.path.join(args.path, s), 'read')
            h = rfile[args.hist]
            x_f_n = xsec_filt_nevts[match.group('slice')]
            # h.Scale(x_f_n[0] * x_f_n[1] / x_f_n[2])
            h.color = COLORS[match.group('slice')]
            h.legendstyle = 'l'
            h.linewidth = 2
            h.title = match.group('slice')
            hlist.append(h)
    plot_distribution(hlist)

    subprocess.call('rsync -avz plots/* qbuat@higgs.phys.sfu.ca:/oldhome/www/Future/QuentinBuat/plotbook/plots', shell=True)
